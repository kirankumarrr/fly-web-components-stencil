/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface FlySideDrawer {
        "open": () => Promise<void>;
        "opened": boolean;
        "sideTitle": string;
    }
    interface FlySpinner {
    }
    interface FlyStockFinder {
    }
    interface FlyStockPrice {
        "stockSymbol": string;
    }
    interface MyComponent {
        /**
          * The first name
         */
        "first": string;
        /**
          * The last name
         */
        "last": string;
        /**
          * The middle name
         */
        "middle": string;
    }
}
export interface FlyStockFinderCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLFlyStockFinderElement;
}
declare global {
    interface HTMLFlySideDrawerElement extends Components.FlySideDrawer, HTMLStencilElement {
    }
    var HTMLFlySideDrawerElement: {
        prototype: HTMLFlySideDrawerElement;
        new (): HTMLFlySideDrawerElement;
    };
    interface HTMLFlySpinnerElement extends Components.FlySpinner, HTMLStencilElement {
    }
    var HTMLFlySpinnerElement: {
        prototype: HTMLFlySpinnerElement;
        new (): HTMLFlySpinnerElement;
    };
    interface HTMLFlyStockFinderElement extends Components.FlyStockFinder, HTMLStencilElement {
    }
    var HTMLFlyStockFinderElement: {
        prototype: HTMLFlyStockFinderElement;
        new (): HTMLFlyStockFinderElement;
    };
    interface HTMLFlyStockPriceElement extends Components.FlyStockPrice, HTMLStencilElement {
    }
    var HTMLFlyStockPriceElement: {
        prototype: HTMLFlyStockPriceElement;
        new (): HTMLFlyStockPriceElement;
    };
    interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {
    }
    var HTMLMyComponentElement: {
        prototype: HTMLMyComponentElement;
        new (): HTMLMyComponentElement;
    };
    interface HTMLElementTagNameMap {
        "fly-side-drawer": HTMLFlySideDrawerElement;
        "fly-spinner": HTMLFlySpinnerElement;
        "fly-stock-finder": HTMLFlyStockFinderElement;
        "fly-stock-price": HTMLFlyStockPriceElement;
        "my-component": HTMLMyComponentElement;
    }
}
declare namespace LocalJSX {
    interface FlySideDrawer {
        "opened"?: boolean;
        "sideTitle"?: string;
    }
    interface FlySpinner {
    }
    interface FlyStockFinder {
        "onFlySymbolSelected"?: (event: FlyStockFinderCustomEvent<string>) => void;
    }
    interface FlyStockPrice {
        "stockSymbol"?: string;
    }
    interface MyComponent {
        /**
          * The first name
         */
        "first"?: string;
        /**
          * The last name
         */
        "last"?: string;
        /**
          * The middle name
         */
        "middle"?: string;
    }
    interface IntrinsicElements {
        "fly-side-drawer": FlySideDrawer;
        "fly-spinner": FlySpinner;
        "fly-stock-finder": FlyStockFinder;
        "fly-stock-price": FlyStockPrice;
        "my-component": MyComponent;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "fly-side-drawer": LocalJSX.FlySideDrawer & JSXBase.HTMLAttributes<HTMLFlySideDrawerElement>;
            "fly-spinner": LocalJSX.FlySpinner & JSXBase.HTMLAttributes<HTMLFlySpinnerElement>;
            "fly-stock-finder": LocalJSX.FlyStockFinder & JSXBase.HTMLAttributes<HTMLFlyStockFinderElement>;
            "fly-stock-price": LocalJSX.FlyStockPrice & JSXBase.HTMLAttributes<HTMLFlyStockPriceElement>;
            "my-component": LocalJSX.MyComponent & JSXBase.HTMLAttributes<HTMLMyComponentElement>;
        }
    }
}
